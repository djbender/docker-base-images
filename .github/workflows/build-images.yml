name: Build Images

on:
  push:
    branches-ignore:
      - "dependabot/**"
  pull_request_target:
    types: [labeled]
  workflow_dispatch: {}

jobs:
  set-matrix:
    runs-on: ubuntu-latest
    if: >
      contains(github.event.pull_request.labels.*.name, 'dependencies')
      || github.event_name == 'push'
      || github.event_name == 'workflow_dispatch'
    outputs:
      core_matrix: ${{ steps.set-matrix.outputs.core_matrix }}
      common_matrix: ${{ steps.set-matrix.outputs.common_matrix }}
      post_java_matrix: ${{ steps.set-matrix.outputs.post_java_matrix }}
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4.2.2
        with:
          persist-credentials: false

      - uses: ruby/setup-ruby@v1.213.0
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Set matrix output
        id: set-matrix
        run: |
          echo "core_matrix=$(bundle exec rake ci:set-matrix:core)" >> $GITHUB_OUTPUT
          echo "common_matrix=$(bundle exec rake ci:set-matrix:common)" >> $GITHUB_OUTPUT
          echo "post_java_matrix=$(bundle exec rake ci:set-matrix:post-java)" >> $GITHUB_OUTPUT

  build-core-images:
    runs-on: ubuntu-latest
    if: >
      contains(github.event.pull_request.labels.*.name, 'dependencies')
      || github.event_name == 'push'
      || github.event_name == 'workflow_dispatch'
    needs:
      - set-matrix
    permissions:
      packages: write
      contents: read
    strategy:
      fail-fast: false
      # Build the core images first using the matrix strategy, from there, we
      # will get a list of other docker images to build concurrently.
      matrix: ${{ fromJSON(needs.set-matrix.outputs.core_matrix) }}
    timeout-minutes: 20
    steps:
      # If you want to set an environment variable equal to the result of a script
      # you must do so via a run step, vs the `env: ` workflow syntax. Additinally see
      # https://docs.github.com/en/actions/learn-github-actions/environment-variables#passing-values-between-steps-and-jobs-in-a-workflow
      - name: set PWD environment variable
        run: echo "PWD=$(pwd)" >> $GITHUB_ENV

      - uses: actions/checkout@v4.2.2
        with:
          persist-credentials: false

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.3.0

      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3.8.0
        with:
          install: true

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/bake-action@v6.2.0
        with:
          pull: true
          push: ${{ github.ref == 'refs/heads/main' }}
          files: ${{ matrix.bake }}
          source: .
          set: |
            ${{ matrix.cache-from }}
            ${{ matrix.cache-to }}
            ${{ matrix.platform }}

  build-common-images:
    runs-on: ubuntu-latest
    needs:
      - set-matrix
      - build-core-images
    if: >
      contains(github.event.pull_request.labels.*.name, 'dependencies')
      || github.event_name == 'push'
      || github.event_name == 'workflow_dispatch'
    permissions:
      packages: write
      contents: read
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.set-matrix.outputs.common_matrix) }}
    timeout-minutes: 120
    steps:
      - name: set PWD environment variable
        run: echo "PWD=$(pwd)" >> $GITHUB_ENV

      - uses: actions/checkout@v4.2.2
        with:
          persist-credentials: false

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.3.0

      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3.8.0
        with:
          install: true

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/bake-action@v6.2.0
        with:
          pull: true
          push: ${{ github.ref == 'refs/heads/main' }}
          files: ${{ matrix.bake }}
          source: .
          set: |
            ${{ matrix.cache-from }}
            ${{ matrix.cache-to }}
            ${{ matrix.platform }}

  build-post-java-images:
    runs-on: ubuntu-latest
    needs:
      - set-matrix
      - build-common-images
    if: >
      contains(github.event.pull_request.labels.*.name, 'dependencies')
      || github.event_name == 'push'
      || github.event_name == 'workflow_dispatch'
    permissions:
      packages: write
      contents: read
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.set-matrix.outputs.post_java_matrix) }}
    timeout-minutes: 120
    steps:
      - name: set PWD environment variable
        run: echo "PWD=$(pwd)" >> $GITHUB_ENV

      - uses: actions/checkout@v4.2.2
        with:
          persist-credentials: false

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.3.0

      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3.8.0
        with:
          install: true

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/bake-action@v6.2.0
        with:
          pull: true
          push: ${{ github.ref == 'refs/heads/main' }}
          files: ${{ matrix.bake }}
          source: .
          set: |
            ${{ matrix.cache-from }}
            ${{ matrix.cache-to }}
            ${{ matrix.platform }}
